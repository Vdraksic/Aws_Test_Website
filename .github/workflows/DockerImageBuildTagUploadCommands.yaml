# Test action to build, tag and upload docker image but without a unified action that does everything at once
# Made in multiple steps with commands

name: docker-image-build-upload-commands

on: workflow_dispatch

# This job builds an image, tags it, saves it and uploads it as an artifact. The last step sends a slack notification on success
jobs:
  BuildAndTag:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build and tag Docker image
      run: |
           cd site
           docker build . -t ${{ secrets.DOCKERHUB_REPO }}:test 
           docker save ${{ secrets.DOCKERHUB_REPO }}:test > test.tar
          
    - name: Upload image as artifact      
      uses: actions/upload-artifact@v3
      with:
        name: ImageArtifact
        path: site/test.tar

    - name: Report Success
      if: always()
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        notify_when: 'success'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

# This job downloads the image artifact, loads it and pushes it to Dockerhub after logging in. The last step sends a slack notification on success
  UploadImage:
    needs: BuildAndTag
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Artifact download
      uses: actions/download-artifact@v3
      with:
        name: ImageArtifact
        
    - name: Load docker image and upload to Dockerhub
      run: |
            docker load --input test.tar
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKE }}
            docker push ${{ secrets.DOCKERHUB_REPO }}:test
            
    - name: Report Success
      if: always()
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        notify_when: 'success'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

# This job has the previous two jobs as dependencies and notifies slack on faliure.
  SlackReportOnFail:
    needs: [BuildAndTag, UploadImage]
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
    - name: Report Faliure
      run: |
           curl -X POST -H 'Content-type: application/json' --data '{"text":"Failed, back to the drawing board"}' ${{ secrets.SLACK_WEBHOOK_URL }}
